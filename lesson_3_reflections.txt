1. When would you want to use a remote repository rather than keeping all your work local?
Whenever I would work from a computer different than the one I usually work on.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
When working on large projects, or with many people, there can be a lot of changes happening
while I'm away. Having Git automatically stay up-to-date means that changes will be made to my remote
repository without my knowledge.

3. Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are a tool specific to GitHub and are available only within GitHub. They are basicaly a clone that reference the original owner. They are used when we want to make changes to a repository that we do not own.
Clones are copies of a repository. They are not specific to GitHub.
Branches represent a series of commits. We branch out of the master branch when we want to try out experimental code. When the experiment is a success, we merge the experiment branch with the master branch.

4. What is the benefit of having a copy of the last known state of the remote stored locally?
I get the latest changes. If someone else fixed a bug, I won't have to deal with that same bug.

5. How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?
I would just send my files to a co-worker, or have multiple co-workers work on the same device.
But now that I know about GitHub, that solution seems stone-age. It would be very easy to do so, but not efficient. Using GitHub is difficult at first, but it can only get easier with practice, and it's far more efficient. All I have to do is hang in there untill I practice enough with GitHub.